<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns="http://mayo.edu/twinkql" targetNamespace="http://mayo.edu/twinkql"
	elementFormDefault="qualified">
	
	<xsd:element name="twinkqlConfig">
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="namespace" type="namespaceDefinition"/>
				<xsd:element name="reasoner" type="reasonerDefinition"/>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:complexType name="namespaceDefinition" >
		<xsd:attribute name="prefix" type="xsd:string" use="required" />
		<xsd:attribute name="uri" type="xsd:string" use="required" />
	</xsd:complexType>
	
	<xsd:complexType name="reasonerDefinition" >
		<xsd:attribute name="id" type="xsd:string" use="required" />
		<xsd:attribute name="class" type="xsd:string" use="required" />
	</xsd:complexType>

	<xsd:element name="sparqlMap">
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="perRowResultMap" type="perRowResultMap" />
				<xsd:element name="compositeResultMap" type="compositeResultMap" />
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="select" type="select" />
				</xsd:choice>
			</xsd:choice>
			<xsd:attribute name="namespace" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="select" mixed="true">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="iterator" type="iterator" />
			<xsd:element name="isNotNull" type="isNotNull" />
			<xsd:element name="test" type="test" />
		</xsd:choice>
		<xsd:attribute name="id" type="xsd:string" use="required" />
		<xsd:attribute name="resultMap" type="xsd:string" />
	</xsd:complexType>
	
	<xsd:complexType name="iterator">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="property" type="xsd:string" use="required" />
				<xsd:attribute name="collection" type="xsd:string" use="required" />
				<xsd:attribute name="open" type="xsd:string" />
				<xsd:attribute name="separator" type="xsd:string" />
				<xsd:attribute name="close" type="xsd:string" />
				<xsd:attribute name="id" use="prohibited" type="xsd:string" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	
	<xsd:complexType name="isNotNull">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="property" type="xsd:string" use="required" />
				<xsd:attribute name="id" use="prohibited" type="xsd:string" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	
	<xsd:complexType name="test">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="property" type="xsd:string" use="required" />
				<xsd:attribute name="testType" type="testType" use="required" />
				<xsd:attribute name="id" use="prohibited" type="xsd:string" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<xsd:simpleType name="testType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="IS_NULL" />
			<xsd:enumeration value="IS_NOT_NULL" />
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:complexType name="perRowResultMap">
		<xsd:complexContent>
			<xsd:extension base="resultMap">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="rowMap" type="rowMap" minOccurs="0" />
					<xsd:element name="if" type="perRowConditional" minOccurs="0" />
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="compositeResultMap">
		<xsd:complexContent>
			<xsd:extension base="resultMap">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tripleMap" type="tripleMap" minOccurs="0" />
					<xsd:element name="if" type="compositeConditional" minOccurs="0" />
				</xsd:choice>
				<xsd:attribute name="predicateVar" type="xsd:string" default="p" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType abstract="true" name="resultMap">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="discriminator" type="discriminator" />
			<xsd:element name="nestedResultMap" type="nestedResultMap" />
		</xsd:choice>
		<xsd:attribute name="id" type="xsd:string" use="required" />
		<xsd:attribute name="extends" type="xsd:string" />
		<xsd:attribute name="resultClass" type="xsd:string" />
		<xsd:attribute name="afterMap" type="xsd:string" />
		<xsd:attribute name="beforeMap" type="xsd:string" />
	</xsd:complexType>

	<xsd:complexType name="tripleMap">
		<xsd:complexContent>
			<xsd:extension base="rowMap">
				<xsd:sequence>
					<xsd:element name="reasoner" type="reasoner" minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
				<xsd:attribute name="predicateUri" type="xsd:string" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="reasoner">
		<xsd:attribute name="id" type="xsd:string" />
	</xsd:complexType>

	<xsd:simpleType name="bindingPart">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="localName" />
			<xsd:enumeration value="uri" />
			<xsd:enumeration value="namespace" />
			<xsd:enumeration value="literalValue" />
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:complexType name="nestedResultMap">
		<xsd:attribute name="resultMap" type="xsd:string" />
		<xsd:attribute name="beanProperty" type="xsd:string" />
	</xsd:complexType>

	<xsd:complexType name="rowMap">
		<xsd:attribute name="var" use="required" type="xsd:string" />
		<xsd:attribute name="varType" use="required" type="bindingPart" />
		<xsd:attribute name="beanProperty" type="xsd:string" />
		<xsd:attribute name="callbackId" type="xsd:string" />
		<xsd:attribute name="modifier" type="xsd:string" />
	</xsd:complexType>

	<xsd:complexType name="discriminator">
		<xsd:sequence>
			<xsd:element name="case" type="case" minOccurs="2" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="var" type="xsd:string" />
		<xsd:attribute name="varType" type="bindingPart" />
		<xsd:attribute name="predicateUri" type="xsd:string" />
	</xsd:complexType>
	
	<xsd:complexType name="case">
		<xsd:attribute name="value" type="xsd:string" />
		<xsd:attribute name="resultMapping" type="xsd:string" />
	</xsd:complexType>
	
	<xsd:complexType name="conditional" abstract="true">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="nestedResultMap" type="nestedResultMap" />
		</xsd:choice>
		<xsd:attribute name="function" type="xsd:string" use="required" />
		<xsd:attribute name="param" type="xsd:string" use="required" />
	</xsd:complexType>
	
	<xsd:complexType name="perRowConditional">
		<xsd:complexContent>
			<xsd:extension base="conditional" >
				<xsd:choice minOccurs="1" maxOccurs="unbounded">
					<xsd:element name="rowMap" type="rowMap" />
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="compositeConditional">
		<xsd:complexContent>
			<xsd:extension base="conditional">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tripleMap" type="tripleMap" />
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
</xsd:schema>
